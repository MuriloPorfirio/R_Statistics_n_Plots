# Pacotes necessários
library(readxl)
library(ggplot2)
library(minpack.lm)

# Importar o arquivo
caminho <- "C:/Users/muril/Desktop/R/colonias.xlsx"
dados <- read_excel(caminho, sheet = 1)

# Alterar o nome das colunas
colnames(dados) <- c("Dose", "Colonias")

# Transformar os dados de "Colonias" para escala logarítmica (log natural)
dados$log_Colonias <- log(dados$Colonias)

# Ajustar o modelo sigmoidal com a coluna "log_Colonias" como variável dependente
modelo_sigmoidal <- nlsLM(log_Colonias ~ A / (1 + exp(-k * (Dose - x0))),
                          start = list(A = max(dados$log_Colonias), k = 1, x0 = median(dados$Dose)),
                          data = dados)

# Corrigir espaçamento
dados$Dose <- factor(dados$Dose, levels = c(0, 1, 1.5, 2, 2.67, 5.2, 10))

# Gerar o gráfico
ggplot(dados, aes(x = Dose, y = log_Colonias, group = 1)) +
  # Mediana em ponto
  stat_summary(fun = median, geom = "point", size = 6, color = "pink", shape = 16) +
  
  # Barra de erro para intervalo interquartil
  stat_summary(fun.data = function(y) {
    return(data.frame(y = median(y), ymin = quantile(y, 0.25), ymax = quantile(y, 0.75)))
  }, geom = "errorbar", width = 0.4, color = "blue", size = 0.5) +
  
  # Barra de erro para valores mínimo e máximo
  stat_summary(fun.data = function(y) {
    return(data.frame(y = median(y), ymin = min(y), ymax = max(y)))
  }, geom = "errorbar", width = 0.15, color = "blue", size = 0.8) +
  
  # Adicionar a linha sigmoidal ao gráfico com base no log
  stat_function(fun = function(x) {
    coef(modelo_sigmoidal)["A"] /
    (1 + exp(-coef(modelo_sigmoidal)["k"] * (as.numeric(as.character(x))
    - coef(modelo_sigmoidal)["x0"])))
  }, color = "purple", size = 0.5) +  
  
  # Títulos e legendas
  labs(
    x = "Dose de Radiação (Gy)",
    y = "Log(Número de Colônias)",
    title = "MDA-MB-231"
  ) +
  
  # Tema customizado para maior visibilidade
  theme_minimal(base_size = 16) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title = element_text(size = 14, face = "bold"),
    axis.text = element_text(size = 10),
    panel.grid.major = element_line(color = "gray"),
    panel.grid.minor = element_blank()
  )
